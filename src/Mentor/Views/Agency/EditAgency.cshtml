@model Agency
@{
    ViewBag._Title = "Edit Agency - " + (Model.IsNew ? "New" : Model.Name);
}
<div>
    <h1 class="page-header">@ViewBag._Title</h1>
    <form role="form" method="POST" enctype="multipart/form-data">
        <div class='form-group'>
            <label>Organization Name:</label>
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.ProgramName) (if different than above):</label>
            @Html.TextBoxFor(x => x.ProgramName, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.Address):</label>
            @Html.TextBoxFor(x => x.Address, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.City):</label>
            @Html.TextBoxFor(x => x.City, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.State):</label>
            @Html.EditorFor(x => x.State)
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.ZipCode):</label>
            @Html.TextBoxFor(x => x.ZipCode, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.Phone):</label>
            @Html.TextBoxFor(x => x.Phone, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.Website):</label>
            @Html.TextBoxFor(x => x.Website, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.MissionStatement) (200-word max.):</label>
            @Html.TextAreaFor(x => x.MissionStatement, new { @class = "form-control", rows = 4 })
            <div><i>Please be sure to describe the population(s) your agency works work, any specialties you have, what your organization stands for.  In a snapshot, what do you do?  The language provided will allow users of this site to search by keyword to find your agency.</i></div>
        </div>
        <fieldset>
            <legend>Primary Program Contact</legend>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ContactFirstName):</label>
                @Html.TextBoxFor(x => x.ContactFirstName, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ContactLastName):</label>
                @Html.TextBoxFor(x => x.ContactLastName, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ContactTitle):</label>
                @Html.TextBoxFor(x => x.ContactTitle, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ContactPhone):</label>
                @Html.TextBoxFor(x => x.ContactPhone, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ContactEmail):</label>
                @Html.TextBoxFor(x => x.ContactEmail, new { @class = "form-control" })
            </div>
        </fieldset>
        <fieldset>
            <legend>Primary Recruitment and Referral Staff (if different than above)</legend>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ReferralFirstName):</label>
                @Html.TextBoxFor(x => x.ContactFirstName, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ReferralLastName):</label>
                @Html.TextBoxFor(x => x.ContactLastName, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ReferralTitle):</label>
                @Html.TextBoxFor(x => x.ContactTitle, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ReferralPhone):</label>
                @Html.TextBoxFor(x => x.ContactPhone, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ReferralEmail):</label>
                @Html.TextBoxFor(x => x.ContactEmail, new { @class = "form-control" })
            </div>
        </fieldset>
        <fieldset>
            <legend>Program Details </legend>
            <div class='form-group'>
                <label>Are you a @Html.LabelFor(x => x.IsNonProfit)?</label>
                <div>@Html.EditorFor(x => x.IsNonProfit)</div>
            </div>
            <div class="form-group">
                <label>Select the model(s) that best describe your program:</label>
                @Html.EditorFor(x => x.ProgramType, "_CodeMultiSelect", new { Type = "Agency.ProgramType", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Where do mentor-mentee pairs meet within your program?</label>
                @Html.EditorFor(x => x.MeetingLocation, "_CodeMultiSelect", new { Type = "Agency.MeetingLocation", ViewBag.Codes })
                @Html.TextBoxFor(x => x.MeetingLocationOther, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>In which section of metro Charlotte does your program operate?</label>
                @Html.EditorFor(x => x.MetroSection, "_CodeMultiSelect", new { Type = "Agency.MetroSection", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Age of mentors within your program:</label>
                @Html.EditorFor(x => x.MentorAge, "_CodeMultiSelect", new { Type = "Agency.MentorAge", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Age of youth served by your program:</label>
                @Html.EditorFor(x => x.MenteeAge, "_CodeMultiSelect", new { Type = "Agency.MenteeAge", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Gender of youth served by your program:</label>
                @Html.EditorFor(x => x.MenteeGender, "_CodeMultiSelect", new { Type = "Agency.MenteeGender", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Method of youth referral:</label>
                @Html.EditorFor(x => x.ReferralMethod, "_CodeMultiSelect", new { Type = "Agency.ReferralMethod", ViewBag.Codes })
                @Html.TextBoxFor(x => x.ReferralMethodOther, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Expected length of commitment for youth and mentors:</label>
                @Html.EditorFor(x => x.ExpectedCommitment, "_CodeMultiSelect", new { Type = "Agency.ExpectedCommitment", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Expected frequency of mentoring activities:</label>
                @Html.EditorFor(x => x.MentoringFrequency, "_CodeSingleSelect", new { Type = "Agency.MentoringFrequency", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>How much time is spent in each session?</label>
                @Html.EditorFor(x => x.SessionLength, "_CodeSingleSelect", new { Type = "Agency.SessionLength", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>How long has your program been in existence?</label>
                @Html.EditorFor(x => x.ProgramExistence, "_CodeSingleSelect", new { Type = "Agency.ProgramExistence", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Please provide your staff count:</label>
                <div>@Html.TextBoxFor(x => x.FullTimeStaffCount, new { size = 4 }) Full-Time</div>
                <div>@Html.TextBoxFor(x => x.PartTimeStaffCount, new { size = 4 }) Part-Time</div>
                <div>@Html.TextBoxFor(x => x.UnpaidStaffCount, new { size = 4 }) Unpaid</div>
            </div>
            <div class="form-group">
                <label>Please indicate your current active counts of:</label>
                <div>Mentors: @Html.TextBoxFor(x => x.MentorCount, new { size = 4 })</div>
                <div>Mentees: @Html.TextBoxFor(x => x.MenteeCount, new { size = 4 })</div>
            </div>
            <div class="form-group">
                <label>Select the youth intake process components:</label>
                @Html.EditorFor(x => x.MenteeIntake, "_CodeMultiSelect", new { Type = "Agency.MenteeIntake", ViewBag.Codes })
                @Html.TextBoxFor(x => x.MenteeIntakeOther, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Please select the mentor screening process components:</label>
                @Html.EditorFor(x => x.MentorScreening, "_CodeMultiSelect", new { Type = "Agency.MentorScreening", ViewBag.Codes })
                @Html.TextBoxFor(x => x.MentorScreeningOther, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Describe the mentor training provided (select all that apply)</label>
                @Html.EditorFor(x => x.MentorTraining, "_CodeMultiSelect", new { Type = "Agency.MentorTraining", ViewBag.Codes })
                @Html.TextBoxFor(x => x.MentorTrainingOther, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>
                    Does the program have a mentee waiting list?
                    <br />If yes, list the number of mentees currently waiting
                </label>
                @Html.TextBoxFor(x => x.MenteeWaitingListCount, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>
                    Is there an application or screening fee for mentors?
                    <br />If yes, please enter that amount
                </label>
                @Html.TextBoxFor(x => x.MentorScreeningFee, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>
                    Does your mentoring program provide financial compensation for its mentors?
                    <br />If yes, please describe
                </label>
                @Html.TextBoxFor(x => x.MentorCompensation, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>If selected, will your agency be able to provide a timely response to potential mentors (defined as within 3 business days)?</label>
                <div>@Html.EditorFor(x => x.HasTimelyResponse)</div>
            </div>
            <div class="form-group">
                <label>
                    Are you interested in being a member of the Mayor's Mentoring Alliance?
                    <i>
                        Please visit the link <a href="#">here</a> to learn more about the Alliance.
                        A member of the Alliance Board will contact you to discuss your candidacy.
                    </i>
                </label>
                <div>@Html.EditorFor(x => x.HasInterestInMma)</div>
            </div>
            <div class="form-group">
                <label>Is Active</label>
                <div>@Html.CheckBoxFor(x => x.IsActive)</div>
            </div>
            <div class="form-group">
                <label>Agency Logo</label>
                <div>
                    <input type="file" name="LogoFile" />
                    @if (Model.Logo != null) {
                        <img src="@Model.Logo" />
                    }
                </div>
            </div>
            <div class="form-group">
                <label>Agency Map Location</label>
                <div>
                    Latitude: @Html.TextBoxFor(x => x.Latitude)
                    Longitude: @Html.TextBoxFor(x => x.Longitude)
                    <button id="geocode" type="button" class="btn btn-default">Get Lat/Lon from Address</button>
                </div>
            </div>
        </fieldset>
        <div class="form-group">
            @Html.SubmitButton("Save Agency", new { @class = "btn btn-primary" })
            @Html.LinkButton("Cancel", Url.Action("ListAgencies"), new { @class = "btn btn-default" })
            @Html.LinkButton("Delete", Url.Action("Delete", new{Model.Id}), new { @class = "btn btn-default confirm" })
        </div>
    </form>
</div>
<script src="https://maps.googleapis.com/maps/api/js?key=&sensor=false"></script>
<script type="text/javascript">
    $(function () {
        var geocoder = new google.maps.Geocoder();
        $('#geocode').click(function () {
            var addr = $('#Address').val() + ' ' + $('#City').val() + ' ' + $('#State').val() + ' ' + $('#ZipCode').val();
            geocoder.geocode({ 'address': addr }, function(results, status) {
                if (status === google.maps.GeocoderStatus.OK) {
                    $('#Latitude').val(results[0].geometry.location.lat());
                    $('#Longitude').val(results[0].geometry.location.lng());
                } else {
                    alert(status + " " + JSON.stringify(results));
                }
            });
        });
    });
</script>
