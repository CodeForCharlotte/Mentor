@model Agency
@{
    ViewBag._Title = "Register";
}
<div>
    <h1 class="page-header">@ViewBag._Title</h1>
    <p>DISCLAIMER:</p>
    <p>Thank you for registering for the MentorCharlotte Portal.  This information will be used to help match potential mentors with mentoring agencies and allow the City of Charlotte and the Mayor’s Mentoring Alliance (MMA) to review the state of mentoring throughout the community.  For those agencies that are interested, the information within this form will also be used to determine eligibility to become a MMA member (explained further in this registration form).</p>
    <p>Please be advised that all information contained on this site is public in accordance with the North Carolina Public Records Act.  How information is displayed throughout the Portal is subject to change.</p>
    <p>The MMA board will approve registrations regularly.  All registrations will be valid through June 30th, 2015, at which time a renewal will be required.</p>
    <p><i>If you are registering an agency that has multiple campuses/locations, each location will require a separate registration so as to be properly displayed when geographically searched.</i></p>
    @Html.Partial("_Error", new ViewDataDictionary((Exception)ViewBag.Error))
    <form role="form" method="POST">
        <div class='form-group'>
            <label>Organization Name:</label>
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.ProgramName) (if different than above):</label>
            @Html.TextBoxFor(x => x.ProgramName, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.Address):</label>
            @Html.TextBoxFor(x => x.Address, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.City):</label>
            @Html.TextBoxFor(x => x.City, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.State):</label>
            @Html.EditorFor(x => x.State)
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.ZipCode):</label>
            @Html.TextBoxFor(x => x.ZipCode, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.Phone):</label>
            @Html.TextBoxFor(x => x.Phone, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.Website):</label>
            @Html.TextBoxFor(x => x.Website, new { @class = "form-control" })
        </div>
        <div class='form-group'>
            <label>@Html.LabelFor(x => x.MissionStatement) (200-word max.):</label>
            @Html.TextAreaFor(x => x.MissionStatement, new { @class = "form-control", rows = 4 })
            <div><i>Please be sure to describe the population(s) your agency works work, any specialties you have, what your organization stands for.  In a snapshot, what do you do?  The language provided will allow users of this site to search by keyword to find your agency.</i></div>
        </div>
        <fieldset>
            <legend>Primary Program Contact</legend>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ContactFirstName):</label>
                @Html.TextBoxFor(x => x.ContactFirstName, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ContactLastName):</label>
                @Html.TextBoxFor(x => x.ContactLastName, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ContactTitle):</label>
                @Html.TextBoxFor(x => x.ContactTitle, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ContactPhone):</label>
                @Html.TextBoxFor(x => x.ContactPhone, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ContactEmail):</label>
                @Html.TextBoxFor(x => x.ContactEmail, new { @class = "form-control" })
            </div>
        </fieldset>
        <fieldset>
            <legend>Primary Recruitment and Referral Staff (if different than above)</legend>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ReferralFirstName):</label>
                @Html.TextBoxFor(x => x.ContactFirstName, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ReferralLastName):</label>
                @Html.TextBoxFor(x => x.ContactLastName, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ReferralTitle):</label>
                @Html.TextBoxFor(x => x.ContactTitle, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ReferralPhone):</label>
                @Html.TextBoxFor(x => x.ContactPhone, new { @class = "form-control" })
            </div>
            <div class='form-group'>
                <label>@Html.LabelFor(x => x.ReferralEmail):</label>
                @Html.TextBoxFor(x => x.ContactEmail, new { @class = "form-control" })
            </div>
        </fieldset>
        <fieldset>
            <legend>Program Details </legend>
            <div class='form-group'>
                <label>Are you a @Html.LabelFor(x => x.IsNonProfit)?</label>
                <div>@Html.EditorFor(x => x.IsNonProfit)</div>
            </div>
            <div class="form-group">
                <label>Select the model(s) that best describe your program:</label>
                @Html.EditorFor(x => x.ProgramType, "_CodeMultiSelect", new { Type = "Agency.ProgramType", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Where do mentor-mentee pairs meet within your program?</label>
                @Html.EditorFor(x => x.MeetingLocation, "_CodeMultiSelect", new { Type = "Agency.MeetingLocation", ViewBag.Codes })
                @Html.TextBoxFor(x => x.MeetingLocationOther, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>In which section of metro Charlotte does your program operate?</label>
                @Html.EditorFor(x => x.MetroSection, "_CodeMultiSelect", new { Type = "Agency.MetroSection", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Age of mentors within your program:</label>
                @Html.EditorFor(x => x.MentorAge, "_CodeMultiSelect", new { Type = "Agency.MentorAge", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Age of youth served by your program:</label>
                @Html.EditorFor(x => x.MenteeAge, "_CodeMultiSelect", new { Type = "Agency.MenteeAge", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Gender of youth served by your program:</label>
                @Html.EditorFor(x => x.MenteeGender, "_CodeMultiSelect", new { Type = "Agency.MenteeGender", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Method of youth referral:</label>
                @Html.EditorFor(x => x.ReferralMethod, "_CodeMultiSelect", new { Type = "Agency.ReferralMethod", ViewBag.Codes })
                @Html.TextBoxFor(x => x.ReferralMethodOther, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Expected length of commitment for youth and mentors:</label>
                @Html.EditorFor(x => x.ExpectedCommitment, "_CodeMultiSelect", new { Type = "Agency.ExpectedCommitment", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Expected frequency of mentoring activities:</label>
                @Html.EditorFor(x => x.MentoringFrequency, "_CodeSingleSelect", new { Type = "Agency.MentoringFrequency", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>How much time is spent in each session?</label>
                @Html.EditorFor(x => x.SessionLength, "_CodeSingleSelect", new { Type = "Agency.SessionLength", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>How long has your program been in existence?</label>
                @Html.EditorFor(x => x.ProgramExistence, "_CodeSingleSelect", new { Type = "Agency.ProgramExistence", ViewBag.Codes })
            </div>
            <div class="form-group">
                <label>Please provide your staff count:</label>
                <div>@Html.TextBoxFor(x => x.FullTimeStaffCount, new { size = 4 }) Full-Time</div>
                <div>@Html.TextBoxFor(x => x.PartTimeStaffCount, new { size = 4 }) Part-Time</div>
                <div>@Html.TextBoxFor(x => x.UnpaidStaffCount, new { size = 4 }) Unpaid</div>
            </div>
            <div class="form-group">
                <label>Please indicate your current active counts of:</label>
                <div>Mentors: @Html.TextBoxFor(x => x.MentorCount, new { size = 4 })</div>
                <div>Mentees: @Html.TextBoxFor(x => x.MenteeCount, new { size = 4 })</div>
            </div>
            <div class="form-group">
                <label>Select the youth intake process components:</label>
                @Html.EditorFor(x => x.MenteeIntake, "_CodeMultiSelect", new { Type = "Agency.MenteeIntake", ViewBag.Codes })
                @Html.TextBoxFor(x => x.MenteeIntakeOther, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Please select the mentor screening process components:</label>
                @Html.EditorFor(x => x.MentorScreening, "_CodeMultiSelect", new { Type = "Agency.MentorScreening", ViewBag.Codes })
                @Html.TextBoxFor(x => x.MentorScreeningOther, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Describe the mentor training provided (select all that apply)</label>
                @Html.EditorFor(x => x.MentorTraining, "_CodeMultiSelect", new { Type = "Agency.MentorTraining", ViewBag.Codes })
                @Html.TextBoxFor(x => x.MentorTrainingOther, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Does the program have a mentee waiting list?
                    <br/>If yes, list the number of mentees currently waiting</label>
                @Html.TextBoxFor(x => x.MenteeWaitingListCount, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Is there an application or screening fee for mentors?
                    <br/>If yes, please enter that amount</label>
                @Html.TextBoxFor(x => x.MentorScreeningFee, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Does your mentoring program provide financial compensation for its mentors?
                    <br/>If yes, please describe</label>
                @Html.TextBoxFor(x => x.MentorCompensation, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>If selected, will your agency be able to provide a timely response to potential mentors (defined as within 3 business days)?</label>
                <div>@Html.EditorFor(x => x.HasTimelyResponse)</div>
            </div>
            <div class="form-group">
                <label>Are you interested in being a member of the Mayor's Mentoring Alliance? 
                    <i>Please visit the link <a href="#">here</a> to learn more about the Alliance. 
                        A member of the Alliance Board will contact you to discuss your candidacy.</i></label>
                <div>@Html.EditorFor(x => x.HasInterestInMma)</div>
            </div>
            @if (!Request.IsAuthenticated)
            {
                <div class="form-group">
                    <label>Email address to access agency profile</label>
                    @Html.TextBox("Username", Request.Form["Username"], new {@class = "form-control"})
                </div>
                <div class="form-group">
                    <label>Password to access agency profile</label>
                    @Html.Password("Password", Request.Form["Password"], new {@class = "form-control"})
                </div>
            }
        </fieldset>
        <button type="submit" class="btn btn-primary">Submit Registration</button>
    </form>
</div>
